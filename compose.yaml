---
services:
  nginx:
    image: nginx:latest
    ports: [80:80, 443:443]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/var/www/html:ro
      - ./data:/var/www/data:ro
      - auth_staticfiles:/app/auth/staticfiles
    restart: always
    depends_on: [auth, dashboard, minio, gitlab]
  auth_db:
    image: postgres:alpine
    command:
      - postgres
      - -c
      - shared_buffers=1GB
      - -c
      - effective_cache_size=4GB
      - -c
      - work_mem=128MB
      - -c
      - maintenance_work_mem=512MB
      - -c
      - random_page_cost=1.1
      - -c
      - temp_file_limit=10GB
      - -c
      - log_min_duration_statement=200ms
      - -c
      - idle_in_transaction_session_timeout=10s
      - -c
      - lock_timeout=1s
      - -c
      - statement_timeout=60s
      - -c
      - shared_preload_libraries=pg_stat_statements
      - -c
      - pg_stat_statements.max=10000
      - -c
      - pg_stat_statements.track=all
    volumes: [auth_data:/var/lib/postgresql/data]
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    healthcheck:
      test: [CMD-SHELL, pg_isready -U $POSTGRES_USER -d $POSTGRES_DB]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
  auth:
    build: auth
    restart: always
    depends_on:
      auth_db:
        condition: service_healthy
    volumes: [auth_staticfiles:/app/staticfiles]
    environment:
      DJANGO_DEBUG: ''
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
  gitlab:
    image: gitlab/gitlab-ce:18.1.0-ce.0
    container_name: gitlab
    hostname: gitlab.i3alumba.ru
    restart: always
    shm_size: 256m
    ports: [2222:2222]
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.i3alumba.ru'
        gitlab_rails['gitlab_shell_ssh_port'] = 2222
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
  gitlab-runner:
    image: gitlab/gitlab-runner:alpine
    container_name: gitlab-runner
    restart: always
    depends_on: [gitlab]
    volumes:
      - gitlab-runner_config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
  minio:
    image: minio/minio:RELEASE.2023-05-18T00-05-36Z
    ports: [9000:9000]
    volumes: [minio_data:/data]
    environment:
      MINIO_ROOT_USER: $MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: $MINIO_ROOT_PASSWORD
    entrypoint: [minio, server, /data, --console-address, :9001]
  dashboard:
    build: dashboard
    restart: always
  registry:
    image: registry:latest
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/registry.password
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - ./registry/registry.passwd:/auth/registry.password
      - registry_data:/data
    ports: [5000]
  drive:
    image: docker.io/personaldrive/personaldrive
    container_name: personal-drive
    restart: always
    volumes:
      - drive-data:/var/www/html/personal-drive-storage-folder
      - drive-db:/var/www/html/personal-drive/database/db
    environment:
      DISABLE_HTTPS: true
volumes:
  auth_data:
  auth_staticfiles:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  gitlab-runner_config:
  minio_data:
  registry_data:
  drive-data:
  drive-db:
