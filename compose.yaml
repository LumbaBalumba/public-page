services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/var/www/html:ro
      - ./data:/var/www/data:ro
      - ./certbot/www:/var/www/certbot/:ro
    restart: always
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot/:rw
      - ./certbot/conf:/etc/letsencrypt/:rw
  auth_db:
    image: postgres:alpine
    command:
      - postgres
      - -c
      - shared_buffers=1GB
      - -c
      - effective_cache_size=4GB
      - -c
      - work_mem=128MB
      - -c
      - maintenance_work_mem=512MB
      - -c
      - random_page_cost=1.1
      - -c
      - temp_file_limit=10GB
      - -c
      - log_min_duration_statement=200ms
      - -c
      - idle_in_transaction_session_timeout=10s
      - -c
      - lock_timeout=1s
      - -c
      - statement_timeout=60s
      - -c
      - shared_preload_libraries=pg_stat_statements
      - -c
      - pg_stat_statements.max=10000
      - -c
      - pg_stat_statements.track=all
    volumes: [auth_data:/var/lib/postgresql/data]
    healthcheck:
      test: [CMD-SHELL, pg_isready -U $POSTGRES_USER -d $POSTGRES_DB]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 1s
    restart: always
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 8G
  auth:
    build: auth
    restart: always
    depends_on:
      auth_db:
        condition: service_healthy
    volumes: [staticfiles:/app/staticfiles]
volumes:
  auth_data:
  staticfiles:
